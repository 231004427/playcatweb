<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sun.playcat.dao.FriendDao">
    <select id="insertCount" resultType="int" parameterType="Friend">
        select count(*) from friend where
          status not in (5)
            <if test="user_id!=null and user_id>0">
                and user_id=#{user_id}
            </if>
            <if test="friend_id!=null and friend_id>0">
                and friend_id=#{friend_id}
            </if>
    </select>
    <select id="noReadCount" resultType="int">
        select sum(no_read) from friend where user_id=#{user_id} and status=1
    </select>
    <select id="searchCount" resultType="int" parameterType="FriendList">
        select count(*) from friend
        <trim prefix="where" prefixOverrides="and|or">
            <if test="user_id!=null and user_id>0">
                and user_id=#{user_id}
            </if>
            <if test="status!=null and status>0">
                and status=#{status}
            </if>
            <if test="group_id!=null and group_id>0">
                and group_id=#{group_id}
            </if>
            and `type`=1
        </trim>
    </select>
    <select id="messageListCount" resultType="int" parameterType="FriendList">
        select count(*) from friend
        where
        last_info is not null
        <if test="user_id!=null and user_id>0">
            and user_id=#{user_id}
        </if>
        <if test="status!=null and status>0">
            and status=#{status}
        </if>
        <if test="group_id!=null and group_id>0">
            and group_id=#{group_id}
        </if>
        <if test="type!=null and type>0">
            and `type`=#{type}
        </if>
    </select>
    <select id="messageList" resultType="Friend" parameterType="FriendList">
        select a.id,a.user_id,a.friend_id,a.group_id,a.type,a.no_read,a.last_info,a.last_time,b.name,b.sex,b.photo from friend a
        left join user b on a.`friend_id`=b.`id` where
        a.last_info is not null
            <if test="user_id!=null and user_id>0">
                and a.user_id=#{user_id}
            </if>
            <if test="status!=null and status>0">
                and a.status=#{status}
            </if>
            <if test="group_id!=null and group_id>0">
                and a.group_id=#{group_id}
            </if>
            <if test="type!=null and type>0">
                and a.type=#{type}
            </if>
        order by a.type desc,a.last_time desc
        LIMIT #{start},#{pageNum}
    </select>
    <select id="search" resultType="Friend" parameterType="FriendList">
        select a.*,b.name,b.sex,b.city,b.photo,b.level,b.online,c.ico as play_game_ico,c.name as play_name from friend a
        left join user b on a.`friend_id`=b.`id`
        left join game c on a.play_game_id=c.id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="user_id!=null and user_id>0">
                and a.user_id=#{user_id}
            </if>
            <if test="status!=null and status>0">
                and a.status=#{status}
            </if>
            <if test="group_id!=null and group_id>0">
                and a.group_id=#{group_id}
            </if>
                and a.type=1
        </trim>
        order by b.online desc,a.`play_status` desc
        LIMIT #{start},#{pageNum}
    </select>
    <insert id="insert" parameterType="Friend"
            useGeneratedKeys="true" keyProperty="id">
        insert into friend (user_id,friend_id,create_time,status,group_id,`type`)
        values(#{user_id},#{friend_id},#{create_time},#{status},#{group_id},#{type})
    </insert>
    <update id="setNoRead" parameterType="Friend">
        update friend set
        no_read=#{no_read}
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id!=null and id>0">
                and id=#{id}
            </if>
            <if test="user_id!=null and user_id>0">
                and user_id=#{user_id}
            </if>
            <if test="friend_id!=null and friend_id>0">
                and friend_id=#{friend_id}
            </if>
        </trim>
    </update>
    <update id="updateNoRead" parameterType="Friend">
        update friend set
        <if test="last_info!=null and last_info.length()>0">
        last_info=#{last_info},last_time=#{last_time},
        </if>
        no_read=no_read+#{no_read}
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id!=null and id>0">
            and id=#{id}
            </if>
            <if test="user_id!=null and user_id>0">
                and user_id=#{user_id}
            </if>
            <if test="friend_id!=null and friend_id>0">
                and friend_id=#{friend_id}
            </if>
        </trim>
    </update>
    <update id="updateRead" parameterType="Friend">
        update friend set
        no_read=no_read-#{no_read}
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id!=null and id>0">
                and id=#{id}
            </if>
            <if test="user_id!=null and user_id>0">
                and user_id=#{user_id}
            </if>
            <if test="friend_id!=null and friend_id>0">
                and friend_id=#{friend_id}
            </if>
        </trim>
    </update>
</mapper>